"""added join tables and update some attributes

Revision ID: 303e25f93a5e
Revises: 2646599f0e3d
Create Date: 2025-04-27 16:50:27.799366

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '303e25f93a5e'
down_revision: Union[str, None] = '2646599f0e3d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('assignee_task',
    sa.Column('assigneeId', sa.UUID(), nullable=False),
    sa.Column('taskId', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['assigneeId'], ['user.id'], ),
    sa.ForeignKeyConstraint(['taskId'], ['task.id'], ),
    sa.PrimaryKeyConstraint('assigneeId', 'taskId')
    )
    op.create_table('recipient_notification',
    sa.Column('recipientId', sa.UUID(), nullable=False),
    sa.Column('notificationId', sa.UUID(), nullable=False),
    sa.Column('isRead', sa.BOOLEAN(), nullable=True),
    sa.Column('notifiedAt', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['notificationId'], ['notification.id'], ),
    sa.ForeignKeyConstraint(['recipientId'], ['user.id'], ),
    sa.PrimaryKeyConstraint('recipientId', 'notificationId')
    )
    op.drop_constraint('notification_taskId_fkey', 'notification', type_='foreignkey')
    op.create_foreign_key(None, 'notification', 'task', ['taskId'], ['id'], ondelete='CASCADE')
    op.alter_column('task', 'dueDate',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DATE(),
               existing_nullable=True)
    op.drop_constraint('task_workspaceId_fkey', 'task', type_='foreignkey')
    op.create_foreign_key(None, 'task', 'workspace', ['workspaceId'], ['id'], ondelete='CASCADE')
    op.drop_constraint('workspace_ownerId_fkey', 'workspace', type_='foreignkey')
    op.create_foreign_key(None, 'workspace', 'user', ['ownerId'], ['id'], ondelete='CASCADE')
    op.drop_constraint('workspaceTaskStatus_workspaceId_fkey', 'workspaceTaskStatus', type_='foreignkey')
    op.create_foreign_key(None, 'workspaceTaskStatus', 'workspace', ['workspaceId'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'workspaceTaskStatus', type_='foreignkey')
    op.create_foreign_key('workspaceTaskStatus_workspaceId_fkey', 'workspaceTaskStatus', 'workspace', ['workspaceId'], ['id'])
    op.drop_constraint(None, 'workspace', type_='foreignkey')
    op.create_foreign_key('workspace_ownerId_fkey', 'workspace', 'user', ['ownerId'], ['id'])
    op.drop_constraint(None, 'task', type_='foreignkey')
    op.create_foreign_key('task_workspaceId_fkey', 'task', 'workspace', ['workspaceId'], ['id'])
    op.alter_column('task', 'dueDate',
               existing_type=sa.DATE(),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.drop_constraint(None, 'notification', type_='foreignkey')
    op.create_foreign_key('notification_taskId_fkey', 'notification', 'task', ['taskId'], ['id'])
    op.drop_table('recipient_notification')
    op.drop_table('assignee_task')
    # ### end Alembic commands ###
