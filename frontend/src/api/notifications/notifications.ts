/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * FastAPI
 * OpenAPI spec version: 0.1.0
 */
import type {
  NotificationResponse
} from '../fastAPI.schemas';

import { customInstance } from '../../utils/customAxios';


type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1];


  export const getNotifications = () => {
/**
 * @summary List Unread Notifications
 */
const listUnreadNotificationsApiNotificationsUnreadGet = (
    
 options?: SecondParameter<typeof customInstance>,) => {
      return customInstance<NotificationResponse[]>(
      {url: `/api/notifications/unread`, method: 'GET'
    },
      options);
    }
  /**
 * @summary Mark Notification Read
 */
const markNotificationReadApiNotificationsNotificationIdReadPatch = (
    notificationId: string,
 options?: SecondParameter<typeof customInstance>,) => {
      return customInstance<void>(
      {url: `/api/notifications/${notificationId}/read`, method: 'PATCH'
    },
      options);
    }
  return {listUnreadNotificationsApiNotificationsUnreadGet,markNotificationReadApiNotificationsNotificationIdReadPatch}};
export type ListUnreadNotificationsApiNotificationsUnreadGetResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getNotifications>['listUnreadNotificationsApiNotificationsUnreadGet']>>>
export type MarkNotificationReadApiNotificationsNotificationIdReadPatchResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getNotifications>['markNotificationReadApiNotificationsNotificationIdReadPatch']>>>
