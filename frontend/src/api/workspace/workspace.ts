/**
 * Generated by orval v7.9.0 🍺
 * Do not edit manually.
 * FastAPI
 * OpenAPI spec version: 0.1.0
 */
import * as axios from 'axios';
import type {
  AxiosRequestConfig,
  AxiosResponse
} from 'axios';

import type {
  DeleteWorkspaceApiWorkspaceDeleteParams,
  UserResponse,
  WorkspaceCreate,
  WorkspaceMembersCreate,
  WorkspaceResponse,
  WorkspaceStatusResponse
} from '../fastAPI.schemas';




  export const getWorkspace = () => {
/**
 * @summary Create Workspace
 */
const createWorkspaceApiWorkspacePost = <TData = AxiosResponse<WorkspaceResponse>>(
    workspaceCreate: WorkspaceCreate, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.post(
      `/api/workspace/`,
      workspaceCreate,options
    );
  }
/**
 * @summary Delete Workspace
 */
const deleteWorkspaceApiWorkspaceDelete = <TData = AxiosResponse<unknown>>(
    params: DeleteWorkspaceApiWorkspaceDeleteParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.delete(
      `/api/workspace/`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }
/**
 * @summary Add Workspace Members
 */
const addWorkspaceMembersApiWorkspaceMembersPost = <TData = AxiosResponse<WorkspaceResponse>>(
    workspaceMembersCreate: WorkspaceMembersCreate, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.post(
      `/api/workspace/members`,
      workspaceMembersCreate,options
    );
  }
/**
 * @summary Get Workspaces By User
 */
const getWorkspacesByUserApiWorkspaceAllGet = <TData = AxiosResponse<WorkspaceResponse[]>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `/api/workspace/all`,options
    );
  }
/**
 * @summary Get Workspace By Id
 */
const getWorkspaceByIdApiWorkspaceWorkspaceIdGet = <TData = AxiosResponse<WorkspaceResponse>>(
    workspaceId: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `/api/workspace/${workspaceId}`,options
    );
  }
/**
 * @summary Get Workspace Statuses
 */
const getWorkspaceStatusesApiWorkspaceWorkspaceIdStatusesGet = <TData = AxiosResponse<WorkspaceStatusResponse[]>>(
    workspaceId: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `/api/workspace/${workspaceId}/statuses`,options
    );
  }
/**
 * @summary Get Workspace Members
 */
const getWorkspaceMembersApiWorkspaceWorkspaceIdMembersGet = <TData = AxiosResponse<UserResponse[]>>(
    workspaceId: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `/api/workspace/${workspaceId}/members`,options
    );
  }
return {createWorkspaceApiWorkspacePost,deleteWorkspaceApiWorkspaceDelete,addWorkspaceMembersApiWorkspaceMembersPost,getWorkspacesByUserApiWorkspaceAllGet,getWorkspaceByIdApiWorkspaceWorkspaceIdGet,getWorkspaceStatusesApiWorkspaceWorkspaceIdStatusesGet,getWorkspaceMembersApiWorkspaceWorkspaceIdMembersGet}};
export type CreateWorkspaceApiWorkspacePostResult = AxiosResponse<WorkspaceResponse>
export type DeleteWorkspaceApiWorkspaceDeleteResult = AxiosResponse<unknown>
export type AddWorkspaceMembersApiWorkspaceMembersPostResult = AxiosResponse<WorkspaceResponse>
export type GetWorkspacesByUserApiWorkspaceAllGetResult = AxiosResponse<WorkspaceResponse[]>
export type GetWorkspaceByIdApiWorkspaceWorkspaceIdGetResult = AxiosResponse<WorkspaceResponse>
export type GetWorkspaceStatusesApiWorkspaceWorkspaceIdStatusesGetResult = AxiosResponse<WorkspaceStatusResponse[]>
export type GetWorkspaceMembersApiWorkspaceWorkspaceIdMembersGetResult = AxiosResponse<UserResponse[]>
