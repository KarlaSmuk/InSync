/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * FastAPI
 * OpenAPI spec version: 0.1.0
 */
export interface DashboardSummary {
  workspaceCount: number;
  taskCount: number;
  completedTaskCount: number;
  unreadNotifications: number;
}

export interface HTTPValidationError {
  detail?: ValidationError[];
}

export interface LoginRequest {
  username: string;
  password: string;
}

export interface NotificationResponse {
  id: string;
  message: string;
  eventType: SchemasNotificationsEventTypeEnum;
  createdAt: string;
  taskId: string;
  taskName: string;
  workspaceId: string;
  workspaceName: string;
  creatorId: string;
  creatorName: string;
  isRead: boolean;
  notifiedAt: string;
}

export interface NotificationTaskResponse {
  id: string;
  title: string;
  description: string;
  dueDate: string;
  workspace: WorkspaceResponse;
  status: WorkspaceStatusResponse;
}

export type TaskCreateDescription = string | null;

export type TaskCreateDueDate = string | null;

export interface TaskCreate {
  title: string;
  description?: TaskCreateDescription;
  dueDate?: TaskCreateDueDate;
  workspaceId: string;
  statusId: string;
  assignees: string[];
}

export type TaskCreateResponseDescription = string | null;

export type TaskCreateResponseDueDate = string | null;

export interface TaskCreateResponse {
  id: string;
  title: string;
  description: TaskCreateResponseDescription;
  dueDate: TaskCreateResponseDueDate;
  workspaceId: string;
  statusId: string;
  assigneesIds: string[];
}

export type TaskResponseDescription = string | null;

export type TaskResponseDueDate = string | null;

export interface TaskResponse {
  id: string;
  title: string;
  description: TaskResponseDescription;
  dueDate: TaskResponseDueDate;
  workspaceId: string;
  status: WorkspaceStatusResponse;
  assignees: UserResponse[];
}

export type TaskUpdateTitle = string | null;

export type TaskUpdateDescription = string | null;

export type TaskUpdateDueDate = string | null;

export type TaskUpdateStatusId = string | null;

export type TaskUpdateAssignees = string[] | null;

export interface TaskUpdate {
  title?: TaskUpdateTitle;
  description?: TaskUpdateDescription;
  dueDate?: TaskUpdateDueDate;
  statusId?: TaskUpdateStatusId;
  assignees?: TaskUpdateAssignees;
}

export interface TokenResponse {
  accessToken: string;
  tokenType?: string;
}

export interface UserCreate {
  email: string;
  username: string;
  fullName: string;
  password: string;
}

export interface UserNotificationResponse {
  id: string;
  message: string;
  eventType: DbModelsNotificationEventTypeEnum;
  createdAt: string;
  task: NotificationTaskResponse;
}

export interface UserResponse {
  email: string;
  username: string;
  fullName: string;
  id: string;
}

export interface UserUpdate {
  email: string;
  username: string;
  fullName: string;
  password?: string;
}

export type ValidationErrorLocItem = string | number;

export interface ValidationError {
  loc: ValidationErrorLocItem[];
  msg: string;
  type: string;
}

export interface WorkspaceCreate {
  name: string;
  description: string;
  status: WorkspaceStatusEnum;
}

export interface WorkspaceMembersCreate {
  workspaceId: string;
  userIds: string[];
}

export interface WorkspaceResponse {
  id: string;
  name: string;
  description: string;
  status: WorkspaceStatusEnum;
}

export type WorkspaceStatusEnum = typeof WorkspaceStatusEnum[keyof typeof WorkspaceStatusEnum];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const WorkspaceStatusEnum = {
  ACTIVE: 'ACTIVE',
  PLANNING: 'PLANNING',
  ON_HOLD: 'ON_HOLD',
  COMPLETED: 'COMPLETED',
} as const;

export interface WorkspaceStatusResponse {
  id: string;
  name: string;
}

export type DbModelsNotificationEventTypeEnum = typeof DbModelsNotificationEventTypeEnum[keyof typeof DbModelsNotificationEventTypeEnum];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DbModelsNotificationEventTypeEnum = {
  TASK_CREATED: 'TASK_CREATED',
  TASK_UPDATED: 'TASK_UPDATED',
  TASK_ASSIGNED: 'TASK_ASSIGNED',
  TASK_UNASSIGNED: 'TASK_UNASSIGNED',
  TASK_DELETED: 'TASK_DELETED',
  TASK_STATUS_CHANGED: 'TASK_STATUS_CHANGED',
  TASK_DUE_SOON: 'TASK_DUE_SOON',
  TASK_COMPLETED: 'TASK_COMPLETED',
} as const;

export type SchemasNotificationsEventTypeEnum = typeof SchemasNotificationsEventTypeEnum[keyof typeof SchemasNotificationsEventTypeEnum];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SchemasNotificationsEventTypeEnum = {
  TASK_UPDATED: 'TASK_UPDATED',
  TASK_ASSIGNED: 'TASK_ASSIGNED',
  TASK_UNASSIGNED: 'TASK_UNASSIGNED',
  TASK_TITLE_CHANGED: 'TASK_TITLE_CHANGED',
  TASK_DELETED: 'TASK_DELETED',
  TASK_STATUS_CHANGED: 'TASK_STATUS_CHANGED',
  TASK_DUE_DATE_CHANGED: 'TASK_DUE_DATE_CHANGED',
  TASK_COMPLETED: 'TASK_COMPLETED',
  TASK_DESCRIPTION_CHANGED: 'TASK_DESCRIPTION_CHANGED',
} as const;

export type DeleteWorkspaceApiWorkspaceDeleteParams = {
workspace_id: string;
};

